{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "IntellipaatADFDemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_CallDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PL_DataFlow",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PL_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DimensionLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[usp_LoadLoadEmployee]",
								"sqlWriterTableType": "StagingEmployee",
								"storedProcedureTableTypeParameterName": "source",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeCode"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeName"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address"
										}
									},
									{
										"source": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PhoneNumber"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OLTP_Staging_SourceDB_StagingEmployee",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_OLTP_TargetEmployee_Employee",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[usp_LoadLoadEmployee]",
								"sqlWriterTableType": "StagingEmployee",
								"storedProcedureTableTypeParameterName": "source",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeCode"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeName"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address"
										}
									},
									{
										"source": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PhoneNumber"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OLTP_SourceDB_Staging_Customer",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_OLTP_TargetEmployee_Employee",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OLTP_SourceDB_Staging_Customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalLoad_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "New incremental Pipeline ",
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from orders",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OrderID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['OrderID']"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String"
										},
										"sink": {
											"path": "$['ProductID']"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String"
										},
										"sink": {
											"path": "$['CustomerID']"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['UnitPrice']"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int32"
										},
										"sink": {
											"path": "$['Quantity']"
										}
									},
									{
										"source": {
											"name": "InsertDateTime",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['InsertDateTime']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_SourceDB_Orders",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Target_CosmosDB_Orders",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Target_CosmosDB_Orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_StagingLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE staging.employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": " EmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Address",
											"type": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OLTP_Blob_Employee",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OLTP_Staging_SourceDB_StagingEmployee",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE staging.employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": " EmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Address",
											"type": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OLTP_Blob_Customer",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OLTP_SourceDB_Staging_Customer",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OLTP_Blob_Customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_OLTP_SourceDB_Staging_Customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DF_Blob_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Blob_StorageAccountEUS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer.txt",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PurchaseOrderID",
						"type": "String"
					},
					{
						"name": " CustomerCode",
						"type": "String"
					},
					{
						"name": "ProductCode",
						"type": "String"
					},
					{
						"name": "EmployeeCode",
						"type": "String"
					},
					{
						"name": " PuchaseOrderDate",
						"type": "String"
					},
					{
						"name": " Quantity",
						"type": "String"
					},
					{
						"name": " UnitPrice",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DF_Blob_PurchaseOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Blob_StorageAccountEUS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "purchaseorder.txt",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PurchaseOrderID",
						"type": "String"
					},
					{
						"name": " CustomerCode",
						"type": "String"
					},
					{
						"name": "ProductCode",
						"type": "String"
					},
					{
						"name": "EmployeeCode",
						"type": "String"
					},
					{
						"name": " PuchaseOrderDate",
						"type": "String"
					},
					{
						"name": " Quantity",
						"type": "String"
					},
					{
						"name": " UnitPrice",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OLTP_Blob_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Blob_StorageAccountEUS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer.txt",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OLTP_SourceDB_Staging_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_Source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "PhoneNumber",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Staging",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Metrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL_Target",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Metric_ProductCustomerCount"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_TargetDB_TargetCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL_Target",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "PhoneNumber",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Target_CosmosDB_Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CosmosDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "orders"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AKV_Auth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://KeyVaultIntellipaat.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQL_Source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKV_Auth",
							"type": "LinkedServiceReference"
						},
						"secretName": "adfauth"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AKV_Auth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_DF_Blob_PurchaseOrder",
								"type": "DatasetReference"
							},
							"name": "PurchaseOrder"
						},
						{
							"dataset": {
								"referenceName": "DS_DF_Blob_Customer",
								"type": "DatasetReference"
							},
							"name": "Customer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_Metrics",
								"type": "DatasetReference"
							},
							"name": "Output"
						}
					],
					"transformations": [
						{
							"name": "PurchaseOrderProjection"
						},
						{
							"name": "CustomerProjection"
						},
						{
							"name": "JoinedStream"
						},
						{
							"name": "Metrics"
						}
					],
					"script": "source(output(\n\t\tPurchaseOrderID as string,\n\t\t{ CustomerCode} as integer,\n\t\tProductCode as string,\n\t\tEmployeeCode as string,\n\t\t{ PuchaseOrderDate} as string,\n\t\t{ Quantity} as integer,\n\t\t{ UnitPrice} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> PurchaseOrder\nsource(output(\n\t\tCustomerCode as short,\n\t\t{ CustomerName} as string,\n\t\t{ Address} as string,\n\t\t{ PhoneNumber} as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> Customer\nPurchaseOrder select(mapColumn(\n\t\t{ CustomerCode},\n\t\tProductCode,\n\t\t{ Quantity}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PurchaseOrderProjection\nCustomer select(mapColumn(\n\t\tCustomerCode,\n\t\t{ CustomerName}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomerProjection\nPurchaseOrderProjection, CustomerProjection join({ CustomerCode} == CustomerCode,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinedStream\nJoinedStream aggregate(groupBy({ CustomerCode},\n\t\tProductCode),\n\t{ Quantity} = sum({ Quantity})) ~> Metrics\nMetrics sink(input(\n\t\tCustomerCode as integer,\n\t\tProductCode as integer,\n\t\tQuantity as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tCustomerCode = { CustomerCode},\n\t\tProductCode = { Quantity}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DF_Blob_PurchaseOrder')]",
				"[concat(variables('factoryId'), '/datasets/DS_DF_Blob_Customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Metrics')]"
			]
		}
	]
}